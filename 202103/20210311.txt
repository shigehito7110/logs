webpackでmoduleを複数まとめて管理
Moduleで読み込んだ変数をimportするとメモリ値をコピーしているので、import先では値の操作でエラーが発生した。
オブジェクトならオブジェクトの参照をコピーしているので、変更可能
Jsフレームワークで値のexportにオブジェクトが使用されているのは多分上記が理由
バニラで操作する場合は値をオブジェクト管理にする、関数内で変更し、その関数を呼ぶかの二択
オブジェクトの方がシンプル？

モジュールコンテキストではthisが使用できない
Jsファイルの読み込み時にtype=‘module’を付属した場合は非同期で読みこれる
Js読み込み時にdeferを付属するとhtml解析が終わったタイミングでsrciptを読み込むことができる。
モジュールの読み込み時にtype=‘module’の場合はdeferがデフォルトで付与されているため、deferを付けずに読み込むことができる。
モジュールは何回読み込んでも1回しか読み込まれない、その他のscriptは回数分だけ読み込む。モジュールみ対応のブラウザではnomoduleを使用する

Strinctモードを使用。’use strict’を使用することで制限を加え、バグが起こりにくいコードにする。予約後の確認なども可能。
ファイル全体で使用する場合はファイルの先頭で記述し、関数レベルで使用する場合は関数の先頭で記述する
モジュールではデフォルトでstrictモードなので、記述する必要はなし。
Jsのバージョンアップはstrictモードに合わせて行われるため、これからは意識してstrictモードで開発する

ダイナミックインポートで必要になった場合のみimportすることで画面の表示がスムーズになる。
使用できるブラウザか参照するか、webpachなどもソフトを使用するのもアリ。

promiseの使用とawaitとasyncを復習した方が良さげ
